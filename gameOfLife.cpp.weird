#include <ncurses.h>
#include <iostream>
#include <unistd.h>

#define NEAR	8
#define top		0
#define tRight	1
#define right	2
#define bRight	3
#define bot		4
#define bLeft	5
#define left	6
#define tLeft	7

using namespace std;

int termCols;
int termRows;

void wait( float seconds){
	usleep ( seconds * 1e6 );
}

struct Vect {
	int x;
	int y;
};

struct Cell {
	bool alive;
	Vect pos;
	Cell* Neighours[NEAR];
	Cell(int,int,bool);
	void process();
	void draw();
};

Cell::Cell(int x, int y, bool alive){
	this->pos.x = x;
	this->pos.y = y;
	this->alive = alive;
}

void Cell::process(){
	Cell* Neighours = {this->}
	int aliveNeighbours = 0;
	if(this->top){
		aliveNeighbours += this.top.alive;
	}
}

void Cell::draw(){
	move(this->pos.y, this->pos.x);
	printw((this->alive ? "░": "█"));
}


int main (void)
{
	initscr();
	noecho();
	Cell test = Cell(0,0,true);
	while(1){
		getmaxyx(stdscr, termCols, termRows);
		test.draw();
		refresh();
		wait(0.5);
	}
	endwin();
	return 0;
}
